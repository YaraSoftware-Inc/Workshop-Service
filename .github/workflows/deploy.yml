name: Deployment Workflow

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, closed ]
jobs:
  test-and-build:
    name: Build & Test (Pre-Merge)
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Run tests
        run: mvn test -B

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Extract version from pom.xml
        id: extract-version
        run: |
          echo "Extracting version from pom.xml..."
          NEW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "NEW_VERSION=$NEW_VERSION"
          echo "version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Build & Push Docker Image
        run: |
          mvn spring-boot:build-image -DskipTests -DdockerPassword=${{ secrets.DOCKER_PASSWORD }}

  update-manifests:
    name: Update Kubernetes Manifest
    runs-on: ubuntu-latest
    needs: build-and-push
    if: needs.build-and-push.outputs.version != ''
    steps:
      - name: Checkout Kubernetes manifests repository
        uses: actions/checkout@v4
        with:
          repository: Open-Source-YaraSoftware/k8s
          ref: main
          token: ${{ secrets.K8S_GITHUB_TOKEN }}
          path: k8s

      - name: Update Kubernetes manifests
        working-directory: k8s/manifests/applications
        run: |
          NEW_VERSION="${{ needs.build-and-push.outputs.version }}"
          sed -i "s|\(image: jhosepmyr/workshop-management:\).*|\1${NEW_VERSION}|" workshop-management.yaml
          git diff workshop-management.yaml

      - name: Commit and push changes
        working-directory: k8s/manifests/applications
        run: |
          git config --global user.email "bot@github.com"
          git config --global user.name "GitHub Actions Bot"
          git add workshop-management.yaml
          if ! git diff --cached --quiet; then
            NEW_VERSION=$(echo "${{ needs.build-and-push.outputs.version }}" | tr -d '\n')
            git commit -m "Update workshop-management image to ${NEW_VERSION}"
            git push origin main
          else
            echo "No changes detected. Skipping commit."
          fi